/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  DietEnum: "balanced" | "high-protein" | "low-carb" | "low-fat"
  HealthEnum: "alcohol-free" | "peanut-free" | "sugar-conscious" | "tree-nut-free" | "vegan" | "vegetarian"
}

export interface NexusGenRootTypes {
  Filters: { // root type
    dietLabels: NexusGenEnums['DietEnum']; // DietEnum!
    healthLabels: NexusGenEnums['HealthEnum']; // HealthEnum!
  }
  Query: {};
  Recipe: { // root type
    calories: number; // Float!
    dietLabels: string[]; // [String!]!
    healthLabels: string[]; // [String!]!
    image: string; // String!
    label: string; // String!
    totalWeight: number; // Float!
    uri: string; // String!
    yield: number; // Int!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  DietEnum: NexusGenEnums['DietEnum'];
  HealthEnum: NexusGenEnums['HealthEnum'];
}

export interface NexusGenFieldTypes {
  Filters: { // field return type
    dietLabels: NexusGenEnums['DietEnum']; // DietEnum!
    healthLabels: NexusGenEnums['HealthEnum']; // HealthEnum!
  }
  Query: { // field return type
    hello: string; // String!
    searchRecipe: NexusGenRootTypes['Recipe']; // Recipe!
    searchRecipes: NexusGenRootTypes['Recipe'][]; // [Recipe!]!
  }
  Recipe: { // field return type
    calories: number; // Float!
    dietLabels: string[]; // [String!]!
    healthLabels: string[]; // [String!]!
    image: string; // String!
    label: string; // String!
    totalWeight: number; // Float!
    uri: string; // String!
    yield: number; // Int!
  }
}

export interface NexusGenArgTypes {
  Query: {
    hello: { // args
      name?: string | null; // String
    }
    searchRecipe: { // args
      uri: string; // String!
    }
    searchRecipes: { // args
      searchQuery: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Filters" | "Query" | "Recipe";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "DietEnum" | "HealthEnum";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}