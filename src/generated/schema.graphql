### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

enum DietEnum {
  balanced
  highProtein
  lowCarb
  lowFat
}

input Filters {
  dietLabels: [DietEnum!]
  healthLabels: [HealthEnum!]
}

enum HealthEnum {
  alcoholFree
  peanutFree
  sugarConscious
  treeNutFree
  vegan
  vegetarian
}

type Mutation {
  login(email: String, password: String): AuthPayload!
  signup(email: String, name: String, password: String): AuthPayload!
}

type Query {
  """Find a recipe by uri"""
  findRecipeByURI(uri: String!): Recipe
  hello(name: String): String!

  """Search for recipes"""
  searchRecipes(filters: Filters, searchQuery: String!): [Recipe!]
  testProtected: String!
}

type Recipe {
  calories: Float!
  dietLabels: [String!]!
  healthLabels: [String!]!
  image: String!
  label: String!
  totalWeight: Float!
  uri: String!
  yield: Int!
}

type RecipeList {
  createdAt: DateTime!
  id: ID!
  name: String!
  recipes(after: String, before: String, first: Int, last: Int, orderBy: RecipeOrderByInput, skip: Int, where: RecipeWhereInput): [Recipe!]
  updatedAt: DateTime!
}

enum RecipeListOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input RecipeListWhereInput {
  AND: [RecipeListWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [RecipeListWhereInput!]
  OR: [RecipeListWhereInput!]
  recipes_every: RecipeWhereInput
  recipes_none: RecipeWhereInput
  recipes_some: RecipeWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum RecipeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  uri_ASC
  uri_DESC
}

input RecipeWhereInput {
  AND: [RecipeWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: String
  image_contains: String
  image_ends_with: String
  image_gt: String
  image_gte: String
  image_in: [String!]
  image_lt: String
  image_lte: String
  image_not: String
  image_not_contains: String
  image_not_ends_with: String
  image_not_in: [String!]
  image_not_starts_with: String
  image_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [RecipeWhereInput!]
  OR: [RecipeWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  uri: String
  uri_contains: String
  uri_ends_with: String
  uri_gt: String
  uri_gte: String
  uri_in: [String!]
  uri_lt: String
  uri_lte: String
  uri_not: String
  uri_not_contains: String
  uri_not_ends_with: String
  uri_not_in: [String!]
  uri_not_starts_with: String
  uri_starts_with: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  recipeLists(after: String, before: String, first: Int, last: Int, orderBy: RecipeListOrderByInput, skip: Int, where: RecipeListWhereInput): [RecipeList!]
  updatedAt: DateTime!
}
